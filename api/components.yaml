components:
  StandardPlanningServerRequestParameters:
    fnname:
      type: string
      description: Needs to be "RunCommand"
    userinfo:
      type: object
      description: An object storing user info such as the locale
      properties:
        username:
          type: string
          description: Username used for the controller
        locale:
          type: string
    slaverequestid:
      type: int
      isRequired: false
      description: The id of the requested planning slave
    stamp:
      type: number
      description: The timestamp of when the command was sent, in seconds.
    respawnopts:
      type: object
      properties:
        allowrespawn:
          type: boolean
        forcerespawn:
          type: boolean
        respawnMemoryThreshold:
          type: int
          description: The memory limit before the planning slave is restarted.
    taskparams:
      type: object
      properties:
        tasktype:
          type: string
        sceneparams:
          type: object
          properties:
            scenetype:
              type: string
              description: Should be 'mujin'
            sceneuri:
              type: string
              description: The Scene's URI.
            scenefilename:
              type: string
              description: The Scene's file name.
            scale:
              $merge: '#/components/Vector3Schema'
              description: Values of ['x', 'y', 'z'] correspondingly. Default values are 1.0.
        taskparameters:
          type: object
          # properties:  # This is the field that defines the actual command
  Internal_ExecuteCommandParameters:
    timeout:
      default: 10
      description: Time in seconds after which the command is assumed to have failed.
      type: number
      x-doNotAddToPayload: true  # Used only inside the client, not sent to the server
    fireandforget:
      default: false
      description: If True, does not wait for the command to finish and returns immediately. The command remains queued on the server.
      type: boolean
      x-doNotAddToPayload: true  # Used only inside the client, not sent to the server
    respawnopts:
      isRequired: False
      description: Settings to determine the respawning behavior of planning slaves. Restarts/respawns a planning slave if conditions are met.
      type: object
      x-doNotAddToPayload: true
      properties:
        allowrespawn:
          type: boolean
          default: True
          description: Allow the planning slave to respawn.
        forcerespawn:
          type: boolean
          default: False
          description: Force the planning slave to respawn.
        respawnMemoryThreshold:
          type: float
          description: The amount of memory that the planning slave may occupy before it is respawned.
          default: 2*1024*1024*1024
    forcereload:
      isRequired: False
      description: If True, then force re-load the scene before executing the task
      type: bool
      x-doNotAddToPayload: true
  robot:
    description: The name of the robot (modelName). If not specified - the value used for client initialization will be applied.
    type: string
  dynamicEnvironmentState:
    description: The dynamic objects in the environment that is to be used for planning/executing the task. A list of bodies.
    type: array
    items:
      type: object
  Vector3Schema:
    type: array
    description: Values of ['x', 'y', 'z'] correspondingly.
    minItems: 3
    maxItems: 3
    additionalItems: False
    items:
      type: number